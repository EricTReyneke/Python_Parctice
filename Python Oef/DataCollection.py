#Lists is weird ou... 
# List = ["1", "2", "3"]
# print(List)
#Wanner een lys gelykgestel word aan n ander lys word dit basies een lys in die memorie as jy nie die [:] gebruik nie.
# new_list = List[:]
# new_list[0] = "Lekker"
# print(List)
# print(new_list)

# using this list, List exercise 
# basket = ["Banana", "Apples", "Oranges", "Blueberries"];

# 1. Remove the Banana from the list
# basket.remove("Banana")
# print(basket)
# 2. Remove "Blueberries" from the list.
# basket.remove("Blueberries")
# print(basket)
# 3. Put "Kiwi" at the end of the list.
# basket.append("Kiwi")
# print(basket)
# 4. Add "Apples" at the beginning of the list
# basket.insert(0, "Apples")
# print(basket)
# 5. Count how many apples in the basket
# print(basket.count("Apples"))
# 6. empty the basket
# basket.clear()
# print(basket)

#fix this code so that it prints a sorted list of all of our friends (alphabetical). Scroll to see answer. Exercise
# friends = ['Simon', 'Patty', 'Joy', 'Carrie', 'Amira', 'Chu']
# friends.append("Stanley")
# print(sorted(friends))

#Weird list ding wat jy prob nooit gan gebruik nie
# a,b,c, * other, d = [1,2,3,4,5,6,7,8,9]
# print(other)
# print(a)
# print(b)
# print(c)
# print(d)


#Dict oefening
#Scroll down to see the answers!
#1 Create a user profile for your new game. This user profile will be stored in a dictionary with keys: 'age', 'username', 'weapons', 'is_active' and 'clan'

#2 iterate and print all the keys in the above user.

#3 Add a new weapon to your user

#4 Add a new key to include 'is_banned'. Set it to false

#5 Ban the user by setting the previous key to True

#6 create a new user2 my copying the previous user and update the age value and username value. 

# new_user = {
#   "age": 20,
#   "Username": "King",
#   "Weapons": ["Long Sword"],
#   "Is_active": True,
#   "Clan": None
# }
# new_user["Weapons"].append("Bow and Arrows")
# new_user.update({"Is_Banned": False})
# new_user.update({"Is_Banned": True})

# new_user2 = new_user.copy()
# new_user2.update({"Age": "21"})
# new_user2.update({"UserName": "Jurkie"})
# new_user2["Clan"] = "Hoere"

# print(new_user.items())
# print("---------------------------------------------------")
# print(new_user2.items())


#Set Exercise
#Scroll to bottom to see solution
# You are working for the school Principal. We have a database of school students:
# school = {'Bobby','Tammy','Jammy','Sally','Danny'}

#during class, the teachers take attendance and compile it into a list. 
# attendance_list = ['Jammy', 'Bobby', 'Danny', 'Sally']
# print(set(attendance_list))

#using what you learned about sets, create a piece of code that the school principal can use to immediately find out who missed class so they can call the parents. (Imagine if the list had 1000s of students. The principal can use the lists generated by the teachers + the school database to use python and make his/her job easier): Find the students that miss class!

# print(school.difference(attendance_list))


#Baie belangrik
#Diffrent data structures
# my_list = [1,2,3,40]
# my_list[0] = "Ek kan verander ek is nie immutable nie."
# print(my_list)

# my_dict = {
#     "UserName": "Eric",
#     "Password": "Moqfaf"
# }
# print(my_dict.items())

# my_tuple = (1,2,3,4,5)
# print(my_tuple)
# #kan nie die values verander nie want n Tuple is immutable.

#Sets is basies n list maar kan net unique items hou. Kan ook nie indexing gebruik op sets nie. Is ook immutable.
# My_Set = {1,2,3,4}
# My_Set.add(5)
# print(My_Set)